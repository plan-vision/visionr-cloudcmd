{"version":3,"sources":["file://cloudcmd/webpack/bootstrap","file://cloudcmd/client/sw/register.js","file://cloudcmd/client/cloudcmd.js","file://cloudcmd/client/client.js","file://cloudcmd/client/get-json-from-file-table.js","file://cloudcmd/client/load-module.js","file://cloudcmd/client/listeners/index.js","file://cloudcmd/client/listeners/get-range.js","file://cloudcmd/client/listeners/get-index.js","file://cloudcmd/client/key/index.js","file://cloudcmd/client/key/vim/index.js","file://cloudcmd/client/key/vim/vim.js","file://cloudcmd/client/key/vim/find.js","file://cloudcmd/client/key/set-current-by-char.js","file://cloudcmd/client/sort.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","20","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","async","registerSW","prefix","navigator","serviceWorker","isHTTPS","location","protocol","isLocalhost","hostname","register","unregisterSW","reg","unregister","listenSW","sw","args","addEventListener","require","wraptile","load","getPrefix","indexOf","Emitify","CloudCmd","config","Util","CloudFunc","DOM","onUpdateFound","init","js","console","log","Events","removeAll","inherits","rendy","tryToCatch","pascalCase","Images","getJsonFromFileTable","currify","apiURL","formatMsg","buildFromJSON","loadModule","CloudCmdProto","Listeners","this","Info","CurrentInfo","Storage","Files","a","prefixSocket","prefixURL","DIRCLIENT","DIRCLIENT_MODULES","MIN_ONE_PANEL_WIDTH","HOST","origin","host","TITLE","sort","left","right","order","loadDir","params","refresh","isRefresh","panel","history","noCurrent","currentName","panelChanged","imgPosition","changePanel","show","path","options","RESTful","json","createFileTable","position","getPanelPosition","query","newObj","read","setCurrentByName","set","ajaxLoad","if","fn","_config","oneFilePanel","Infinity","document","body","scrollIntoViewIfNeeded","initModules","files","getFiles","on","updateCurrentInfo","saveCurrentName","currentFile","getCurrentByName","setCurrentFile","hash","dirPath","getCurrentDirPath","getPanels","forEach","setOnPanel","initKeysPanel","baseInit","css","loadStyle","route","split","kebabModule","replace","file","current","execFromModule","msg","logOut","url","clear","ajax","error","reload","Key","showLoad","doBefore","edit","menu","local","dobefore","panels","panelParam","link","pathLink","Dialog","alert","responseText","getPanel","dir","childNodes","removeChild","lastChild","innerHTML","id","template","emit","moduleName","funcName","func","goToParentDir","parentDirPath","first","addErrorListener","e","src","filter","getCurrentName","map","size","getCurrentSize","owner","getCurrentOwner","getCurrentMode","date","getCurrentDate","type","getCurrentType","exec","loadJS","pathFull","then","newModule","f","assign","itype","clipboard","getRange","getIndex","uploadFiles","FS","NBSP_REG","RegExp","String","fromCharCode","fm","getFM","addOnce","event","Menu","x","clientX","y","clientY","addContextMenu","ENABLED","preventDefault","contextMenu","getByClassAll","select","target","classList","add","unselect","remove","onDrop","items","dataTransfer","filesCount","webkitGetAsEntry","dirFiles","Array","from","item","kind","uploadDirectory","Operation","operation","shiftKey","onDragOver","effectAllowed","test","dropEffect","dragndrop","isBind","state","innerWidth","getAttribute","packer","EXT","getPackerExt","isDataset","el","dataset","isPanel","addClick","parentElement","getPath","concat","pop","sortPanel","header","execAll","funcs","EventsFiles","mousedown","with","execIfNotUL","alt","altKey","ctrl","ctrlKey","meta","metaKey","element","getLIElement","fromName","toName","to","getAllFiles","names","getFilenames","getNameIndex","indexFrom","indexTo","getFilesRange","button","isMac","platform","Error","toggleSelectedFile","selectFile","toggleSelect","click","getByDataName","tagName","getULElement","unselectFiles","dragstart","isDir","getCurrentLink","createElement","textContent","href","setData","dblclick","isCurrentIsDir","getCurrentPath","View","touchstart","isCurrentFile","initF2","UserMenu","keysElement","getById","clickFuncs","Help","EditFile","promptNewDir","Config","Konsole","Terminal","Contact","onPathElementClick","attr","infoPanel","isNoCurrent","writeText","title","catch","prefixReg","decodeURI","decodePath","callback","side","string","filesElement","pathElement","getPathListener","array","index","Buffer","KEY","vim","setCurrentByChar","Chars","fullstore","KeyProto","Binded","getChar","keyIdentifier","code","substring","hex","parseInt","listener","keyCode","isBetween","ZERO","Z","isNumpad","char","isSymbol","DOT","HYPHEN","EQUAL","getSymbol","isVim","isSelected","prev","next","dataName","ctrlMeta","previousSibling","nextSibling","TAB","INSERT","INSERT_MAC","DELETE","ASTERISK","toggleAllSelectedFiles","PLUS","expandSelection","MINUS","shrinkSelection","F1","F2","F3","Markdown","F4","EditFileVim","F5","F6","renameCurrent","F7","promptNewFile","F8","F9","F10","TRA","BRACKET_CLOSE","SPACE","loadCurrentSize","U","swapPanels","UP","DOWN","LEFT","duplicatePanel","RIGHT","HOME","END","last","PAGE_DOWN","scrollByPages","PAGE_UP","ENTER","BACKSPACE","BACKSLASH","A","selectAllFiles","G","goToDirectory","M","EditNamesVim","EditNames","P","R","C","copy","X","cut","V","paste","D","switchKey","setBind","unsetBind","addKey","finder","operations","getOperations","escape","moveNext","count","isVisual","isDelete","setCurrent","movePrevious","find","prompt","findNext","findPrevious","sibling","unselectFile","store","visual","stopVisual","end","noop","handleDelete","prevStore","join","isNaN","limier","searchStore","searchIndex","previous","_next","_previous","escapeRegExp","charStore","firstByName","skipCount","setted","escapeChar","regExp","chars","skipN","some","byName","sortPrevious","panelPosition"],"mappings":"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","file":"cloudcmd.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t20: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([40,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","'use strict';\n\nmodule.exports.registerSW = registerSW;\nmodule.exports.unregisterSW = unregisterSW;\n\nmodule.exports.listenSW = (sw, ...args) => {\n    sw && sw.addEventListener(...args);\n};\n\nasync function registerSW(prefix) {\n    if (!navigator.serviceWorker)\n        return;\n    \n    const isHTTPS = location.protocol === 'https:';\n    const isLocalhost = location.hostname === 'localhost';\n    \n    if (!isHTTPS && !isLocalhost)\n        return;\n    \n    return navigator.serviceWorker.register(`${prefix}/sw.js`);\n}\nasync function unregisterSW(prefix) {\n    const reg = await registerSW(prefix);\n    reg && reg.unregister(prefix);\n}\n\n","'use strict';\n\nrequire('../css/main.css');\nrequire('../css/nojs.css');\nrequire('../css/columns/name-size-date.css');\nrequire('../css/columns/name-size.css');\n\nconst wraptile = require('wraptile');\nconst load = require('load.js');\n\nconst isDev = process.env.NODE_ENV === 'development';\n\nconst {\n    registerSW,\n    listenSW,\n} = require('./sw/register');\n\n// prevent additional loading of emitify\nwindow.Emitify = require('emitify');\n\nmodule.exports = window.CloudCmd = (config) => {\n    window.Util = require('../common/util');\n    window.CloudFunc = require('../common/cloudfunc');\n    \n    const DOM = require('./dom');\n    \n    window.DOM = DOM;\n    window.CloudCmd = require('./client');\n    \n    register(config);\n    \n    require('./listeners');\n    require('./key');\n    require('./sort');\n    \n    const prefix = getPrefix(config.prefix);\n    \n    window.CloudCmd.init(prefix, config);\n};\n\nfunction getPrefix(prefix) {\n    if (!prefix)\n        return '';\n    \n    if (!prefix.indexOf('/'))\n        return prefix;\n    \n    return `/${prefix}`;\n}\n\nconst onUpdateFound = wraptile(async (config) => {\n    if (isDev)\n        return;\n    \n    const {DOM} = window;\n    const prefix = getPrefix(config.prefix);\n    \n    await load.js(`${prefix}/dist/cloudcmd.common.js`);\n    await load.js(`${prefix}/dist/cloudcmd.js`);\n    \n    console.log('cloudcmd: sw: updated');\n    \n    DOM.Events.removeAll();\n    window.CloudCmd(config);\n});\n\nasync function register(config) {\n    const {prefix} = config;\n    const sw = await registerSW(prefix);\n    \n    listenSW(sw, 'updatefound', onUpdateFound(config));\n}\n\n","'use strict';\n\n/* global DOM */\n\nconst Emitify = require('emitify');\nconst inherits = require('inherits');\nconst rendy = require('rendy');\nconst load = require('load.js');\nconst tryToCatch = require('try-to-catch');\n\nconst pascalCase = require('just-pascal-case');\nconst isDev = process.env.NODE_ENV === 'development';\n\nconst Images = require('./dom/images');\nconst {unregisterSW} = require('./sw/register');\nconst getJsonFromFileTable = require('./get-json-from-file-table');\n\nconst currify = require('currify');\n\nconst noJS = (a) => a.replace(/.js$/, '');\n\nconst {\n    apiURL,\n    formatMsg,\n    buildFromJSON,\n} = require('../common/cloudfunc');\n\nconst loadModule = require('./load-module');\n\ninherits(CloudCmdProto, Emitify);\n\nmodule.exports = new CloudCmdProto(DOM);\n\nload.addErrorListener((e, src) => {\n    const msg = `file ${src} could not be loaded`;\n    Images.show.error(msg);\n});\n\nfunction CloudCmdProto(DOM) {\n    let Listeners;\n    \n    const log = (...a) => {\n        if (!isDev )\n            return;\n        \n        console.log(...a);\n    };\n    \n    Emitify.call(this);\n    \n    const CloudCmd = this;\n    const Info = DOM.CurrentInfo;\n    \n    const {\n        Storage,\n        Files,\n    } = DOM;\n    \n    this.log = log;\n    this.prefix = '';\n    this.prefixSocket = '';\n    this.prefixURL = '';\n    this.DIRCLIENT = '/dist/';\n    this.DIRCLIENT_MODULES = this.DIRCLIENT + 'modules/';\n    \n    this.MIN_ONE_PANEL_WIDTH = 1155;\n    this.HOST = location.origin || location.protocol + '//' + location.host;\n    \n    const TITLE = 'Cloud Commander';\n    this.TITLE = TITLE;\n    \n    this.sort = {\n        left: 'name',\n        right: 'name',\n    };\n    \n    this.order = {\n        left: 'asc',\n        right: 'asc',\n    };\n    \n    /**\n     * Функция привязываеться ко всем ссылкам и\n     *  загружает содержимое каталогов\n     *\n     * @param params - {\n     *          paramLink - ссылка\n     *          needRefresh - необходимость обязательной загрузки данных с сервера\n     *          panel\n     *      }\n     * @param callback\n     */\n    this.loadDir = async (params) => {\n        const p = params;\n        const refresh = p.isRefresh;\n        \n        const {\n            panel,\n            history,\n            noCurrent,\n            currentName,\n        } = p;\n        \n        let panelChanged;\n        \n        if (!noCurrent && panel && panel !== Info.panel) {\n            DOM.changePanel();\n            panelChanged = true;\n        }\n        \n        let imgPosition;\n        \n        if (panelChanged || refresh || !history)\n            imgPosition = 'top';\n        \n        Images.show.load(imgPosition, panel);\n        \n        /* загружаем содержимое каталога */\n        await ajaxLoad(p.path, {\n            refresh,\n            history,\n            noCurrent,\n            currentName,\n        }, panel);\n    };\n    \n    /**\n     * Конструктор CloudClient, который\n     * выполняет весь функционал по\n     * инициализации\n     */\n    this.init = async (prefix, config) => {\n        CloudCmd.prefix = prefix;\n        CloudCmd.prefixURL = `${prefix}${apiURL}`;\n        CloudCmd.prefixSocket = config.prefixSocket;\n        \n        CloudCmd.config = (key) => config[key];\n        CloudCmd.config.if = currify((key, fn, a) => config[key] && fn(a));\n        CloudCmd._config = (key, value) => {\n            /*\n             * should be called from config.js only\n             * after successful update on server\n             */\n            \n            if (key === 'password')\n                return;\n            \n            config[key] = value;\n        };\n        \n        if (config.oneFilePanel)\n            CloudCmd.MIN_ONE_PANEL_WIDTH = Infinity;\n        \n        if (!document.body.scrollIntoViewIfNeeded)\n            await load.js(prefix + CloudCmd.DIRCLIENT_MODULES + 'polyfill.js');\n        \n        await initModules();\n        await baseInit();\n        await loadStyle();\n        \n        CloudCmd.route(location.hash);\n    };\n    \n    async function loadStyle() {\n        const {prefix} = CloudCmd;\n        const name = prefix + '/dist/cloudcmd.common.css';\n        \n        await load.css(name);\n    }\n    \n    this.route = (path) => {\n        const query = path.split('/');\n        \n        if (!path)\n            return;\n        \n        const [kebabModule] = query;\n        const module = noJS(pascalCase(kebabModule.slice(1)));\n        \n        const file = query[1];\n        const current = DOM.getCurrentByName(file);\n        \n        if (file && !current) {\n            const msg = formatMsg('set current file', file, 'error');\n            CloudCmd.log(msg);\n            return;\n        }\n        \n        DOM.setCurrentFile(current);\n        CloudCmd.execFromModule(module, 'show');\n    };\n    \n    this.logOut = async () => {\n        const url = CloudCmd.prefix + '/logout';\n        const error = () => document.location.reload();\n        const {prefix} = CloudCmd;\n        \n        await DOM.Storage.clear();\n        unregisterSW(prefix);\n        DOM.load.ajax({\n            url,\n            error,\n        });\n    };\n    \n    const initModules = async () => {\n        CloudCmd.Key = new CloudCmd.Key();\n        CloudCmd.Key.bind();\n        \n        const [, modules] = await tryToCatch(Files.get, 'modules');\n        const showLoad = Images.show.load;\n        \n        const doBefore = {\n            edit: showLoad,\n            menu: showLoad,\n        };\n        \n        const load = (name, path, dobefore) => {\n            loadModule({\n                name,\n                path,\n                dobefore,\n            });\n        };\n        \n        if (!modules)\n            return;\n        \n        for (const module of modules.local) {\n            load(null, module, doBefore[module]);\n        }\n    };\n    \n    async function saveCurrentName(currentName) {\n        await Storage.set('current-name', currentName);\n    }\n    \n    async function baseInit() {\n        const files = DOM.getFiles();\n        \n        CloudCmd.on('current-file', DOM.updateCurrentInfo);\n        CloudCmd.on('current-name', saveCurrentName);\n        \n        const name = await Storage.get('current-name');\n        const currentFile = name && DOM.getCurrentByName(name) || files[0];\n        \n        /* выделяем строку с первым файлом */\n        if (files)\n            DOM.setCurrentFile(currentFile, {\n                // when hash is present\n                // it should be handled with this.route\n                // overwre otherwise\n                history: !location.hash,\n            });\n        \n        const dirPath = DOM.getCurrentDirPath();\n        Listeners = CloudCmd.Listeners;\n        Listeners.init();\n        \n        const panels = getPanels();\n        panels.forEach(Listeners.setOnPanel);\n        \n        Listeners.initKeysPanel();\n        \n        if (!CloudCmd.config('dirStorage'))\n            return;\n        \n        const data = await Storage.get(dirPath);\n        \n        if (!data)\n            await Storage.set(dirPath, getJsonFromFileTable());\n    }\n    \n    function getPanels() {\n        const panels = ['left'];\n        \n        if (CloudCmd.config('oneFilePanel'))\n            return panels;\n        \n        return [\n            ...panels,\n            'right',\n        ];\n    }\n    \n    this.execFromModule = async (moduleName, funcName, ...args) => {\n        await CloudCmd[moduleName]();\n        \n        const func = CloudCmd[moduleName][funcName];\n        func(...args);\n    };\n    \n    this.refresh = async (options = {}) => {\n        const {\n            panel = Info.panel,\n            currentName,\n        } = options;\n        \n        const path = DOM.getCurrentDirPath(panel);\n        \n        const isRefresh = true;\n        const history = false;\n        const noCurrent = options ? options.noCurrent : false;\n        \n        await CloudCmd.loadDir({\n            path,\n            isRefresh,\n            history,\n            panel,\n            noCurrent,\n            currentName,\n        });\n    };\n    \n    /**\n     * Функция загружает json-данные о Файловой Системе\n     * через ajax-запрос.\n     * @param path - каталог для чтения\n     * @param options\n     * { refresh, history } - необходимость обновить данные о каталоге\n     * @param panel\n     * @param callback\n     *\n     */\n    async function ajaxLoad(path, options = {}, panel) {\n        const {RESTful} = DOM;\n        \n        CloudCmd.log('reading dir: \"' + path + '\";');\n        \n        const dirStorage = CloudCmd.config('dirStorage');\n        const json = dirStorage && await Storage.get(path);\n        \n        const name = options.currentName || Info.name;\n        const {\n            noCurrent,\n            refresh,\n        } = options;\n        \n        if (!refresh && json)\n            return await createFileTable(json, panel, options);\n        \n        const position = DOM.getPanelPosition(panel);\n        const sort = CloudCmd.sort[position];\n        const order = CloudCmd.order[position];\n        \n        const query = rendy('?sort={{ sort }}&order={{ order }}', {\n            sort,\n            order,\n        });\n        \n        const [, newObj] = await RESTful.read(path + query, 'json');\n        \n        if (!newObj)\n            return; // that's OK, error handled by RESTful\n        \n        options.sort = sort;\n        options.order = order;\n        \n        await createFileTable(newObj, panel, options);\n        \n        if (refresh && !noCurrent)\n            DOM.setCurrentByName(name);\n        \n        if (!CloudCmd.config('dirStorage'))\n            return;\n        \n        Storage.set(path, newObj);\n    }\n    \n    /**\n     * Функция строит файловую таблицу\n     * @param json  - данные о файлах\n     * @param panelParam\n     * @param history\n     * @param callback\n     */\n    async function createFileTable(data, panelParam, options) {\n        const {\n            history,\n            noCurrent,\n        } = options;\n        \n        const names = ['file', 'path', 'link', 'pathLink'];\n        \n        const [\n            error,\n            [file, path, link, pathLink],\n        ] = await tryToCatch(Files.get, names);\n        \n        if (error)\n            return DOM.Dialog.alert(error.responseText);\n        \n        const panel = panelParam || DOM.getPanel();\n        const {prefix} = CloudCmd;\n        \n        const {\n            dir,\n            name,\n        } = Info;\n        \n        const {childNodes} = panel;\n        let i = childNodes.length;\n        \n        while (i--)\n            panel.removeChild(panel.lastChild);\n        \n        panel.innerHTML = buildFromJSON({\n            sort        : options.sort,\n            order       : options.order,\n            data,\n            id          : panel.id,\n            prefix,\n            template    : {\n                file,\n                path,\n                pathLink,\n                link,\n            },\n        });\n        \n        Listeners.setOnPanel(panel);\n        \n        if (!noCurrent) {\n            let current;\n            \n            if (name === '..' && dir !== '/')\n                current = DOM.getCurrentByName(dir);\n            \n            if (!current)\n                [current] = DOM.getFiles(panel);\n            \n            DOM.setCurrentFile(current, {\n                history,\n            });\n            \n            CloudCmd.emit('active-dir', Info.dirPath);\n        }\n    }\n    \n    this.goToParentDir = async () => {\n        const {\n            dir,\n            dirPath,\n            parentDirPath,\n            panel,\n        } = Info;\n        \n        if (dirPath === parentDirPath)\n            return;\n        \n        const path = parentDirPath;\n        \n        await CloudCmd.loadDir({\n            path,\n        });\n        \n        const current = DOM.getCurrentByName(dir);\n        const [first] = DOM.getFiles(panel);\n        \n        DOM.setCurrentFile(current || first, {\n            history,\n        });\n    };\n}\n\n","'use strict';\n\n/* global DOM */\n\nconst Info = DOM.CurrentInfo;\n\n/**\n * Функция генерирует JSON из html-таблицы файлов и\n * используеться при первом заходе в корень\n */\nmodule.exports = () => {\n    const path = DOM.getCurrentDirPath();\n    const infoFiles = Info.files || [];\n    \n    const notParent = (current) => {\n        const name = DOM.getCurrentName(current);\n        return name !== '..';\n    };\n    \n    const parse = (current) => {\n        const name = DOM.getCurrentName(current);\n        const size = DOM.getCurrentSize(current);\n        const owner = DOM.getCurrentOwner(current);\n        const mode = DOM.getCurrentMode(current);\n        const date = DOM.getCurrentDate(current);\n        const type = DOM.getCurrentType(current);\n        \n        return {\n            name,\n            size,\n            mode,\n            owner,\n            date,\n            type,\n        };\n    };\n    \n    const files = infoFiles\n        .filter(notParent)\n        .map(parse);\n    \n    const fileTable = {\n        path,\n        files,\n    };\n    \n    return fileTable;\n};\n\n","'use strict';\n\n/* global CloudCmd */\n\nconst exec = require('execon');\nconst tryToCatch = require('try-to-catch');\nconst loadJS = require('load.js').js;\n\nconst pascalCase = require('just-pascal-case');\nconst noJS = (a) => a.replace(/.js$/, '');\n\n/**\n * function load modules\n * @params = {name, path, func, dobefore, arg}\n */\nmodule.exports = function loadModule(params) {\n    if (!params)\n        return;\n    \n    const {path} = params;\n    \n    const name = path && noJS(pascalCase(path));\n    const doBefore = params.dobefore;\n    \n    if (CloudCmd[name])\n        return;\n    \n    CloudCmd[name] = () => {\n        exec(doBefore);\n        const {prefix} = CloudCmd;\n        const pathFull = prefix + CloudCmd.DIRCLIENT_MODULES + path + '.js';\n        \n        return loadJS(pathFull).then(async () => {\n            const newModule = async (f) => f && f();\n            const module = CloudCmd[name];\n            \n            Object.assign(newModule, module);\n            \n            CloudCmd[name] = newModule;\n            \n            CloudCmd.log('init', name);\n            await module.init();\n            \n            return newModule;\n        });\n    };\n    \n    CloudCmd[name].show = async (...args) => {\n        CloudCmd.log('show', name, args);\n        const m = CloudCmd[name];\n        \n        const [e, a] = await tryToCatch(m);\n        \n        if (e)\n            return console.error(e);\n        \n        await a.show(...args);\n    };\n};\n\n","/* global DOM, CloudCmd */\n\n'use strict';\n\nconst exec = require('execon');\nconst itype = require('itype');\nconst currify = require('currify');\nconst tryToCatch = require('try-to-catch');\nconst clipboard = require('@cloudcmd/clipboard');\n\nconst getRange = require('./get-range');\nconst getIndex = currify(require('./get-index'));\nconst uploadFiles = require('../dom/upload-files');\n\nconst {FS} = require('../../common/cloudfunc');\n\nconst NBSP_REG = RegExp(String.fromCharCode(160), 'g');\nconst SPACE = ' ';\n\nmodule.exports.init = () => {\n    contextMenu();\n    dragndrop();\n    unload();\n    pop();\n    resize();\n    config();\n    header();\n};\n\nCloudCmd.Listeners = module.exports;\n\nconst unselect = (event) => {\n    const isMac = /Mac/.test(window.navigator.platform);\n    const {\n        shiftKey,\n        metaKey,\n        ctrlKey,\n    } = event;\n    \n    if (shiftKey || isMac && metaKey || ctrlKey)\n        return;\n    \n    DOM.unselectFiles();\n};\n\nconst execAll = currify((funcs, event) => {\n    for (const fn of funcs)\n        fn(event);\n});\n\nconst Info = DOM.CurrentInfo;\nconst {Events} = DOM;\nconst EventsFiles = {\n    mousedown: exec.with(execIfNotUL, setCurrentFileByEvent),\n    click: execAll([\n        onClick,\n        unselect,\n    ]),\n    dragstart: exec.with(execIfNotUL, onDragStart),\n    dblclick: exec.with(execIfNotUL, onDblClick),\n    touchstart: exec.with(execIfNotUL, onTouch),\n};\n\nlet EXT;\n\nfunction header() {\n    const fm = DOM.getFM();\n    const isDataset = (el) => el.dataset;\n    const isPanel = (el) => {\n        return /^js-(left|right)$/.test(el.dataset.name);\n    };\n    \n    Events.addClick(fm, (event) => {\n        const el = event.target;\n        const parent = el.parentElement;\n        \n        if (parent.dataset.name !== 'js-fm-header')\n            return;\n        \n        const name = (el.dataset.name || '')\n            .replace('js-', '');\n        \n        if (!/^(name|size|date)$/.test(name))\n            return;\n        \n        const panel = getPath(el)\n            .filter(isDataset)\n            .filter(isPanel)\n            .pop();\n        \n        CloudCmd.sortPanel(name, panel);\n    });\n}\n\nfunction getPath(el, path = []) {\n    if (!el)\n        return path;\n    \n    return getPath(el.parentElement, path.concat(el));\n}\n\nasync function config() {\n    const [, config] = await tryToCatch(DOM.Files.get, 'config');\n    const type = config && config.packer;\n    \n    EXT = DOM.getPackerExt(type);\n}\n\nmodule.exports.initKeysPanel = () => {\n    const keysElement = DOM.getById('js-keyspanel');\n    \n    if (!keysElement)\n        return;\n    \n    Events.addClick(keysElement, ({target}) => {\n        const {id} = target;\n        const operation = (name) => {\n            const {Operation} = CloudCmd;\n            const fn = Operation.show.bind(null, name);\n            \n            return fn;\n        };\n        \n        const clickFuncs = {\n            'f1'        : CloudCmd.Help.show,\n            'f2'        : initF2,\n            'f3'        : CloudCmd.View.show,\n            'f4'        : CloudCmd.EditFile.show,\n            'f5'        : operation('copy'),\n            'f6'        : operation('move'),\n            'f7'        : DOM.promptNewDir,\n            'f8'        : operation('delete'),\n            'f9'        : CloudCmd.Menu.show,\n            'f10'       : CloudCmd.Config.show,\n            '~'         : CloudCmd.Konsole.show,\n            'shift~'    : CloudCmd.Terminal.show,\n            'contact'   : CloudCmd.Contact.show,\n        };\n        \n        exec(clickFuncs[id]);\n    });\n};\n\nfunction initF2() {\n    CloudCmd.UserMenu.show();\n}\n\nconst getPanel = (side) => {\n    if (!itype.string(side))\n        return side;\n    \n    return DOM.getByDataName('js-' + side);\n};\n\nmodule.exports.setOnPanel = (side) => {\n    const panel = getPanel(side);\n    \n    const filesElement = DOM.getByDataName('js-files', panel);\n    const pathElement = DOM.getByDataName('js-path', panel);\n    \n    /* ставим загрузку гифа на клик*/\n    Events.addClick(pathElement, getPathListener(panel));\n    Events.add(filesElement, EventsFiles);\n};\n\nfunction getPathListener(panel) {\n    return onPathElementClick.bind(null, panel);\n}\n\nfunction isNoCurrent(panel) {\n    const infoPanel = Info.panel;\n    \n    if (!infoPanel)\n        return true;\n    \n    const namePanel = panel.getAttribute('data-name');\n    const nameInfoPanel = infoPanel.getAttribute('data-name');\n    \n    return namePanel !== nameInfoPanel;\n}\n\nfunction decodePath(path) {\n    const url = CloudCmd.HOST;\n    const {prefix} = CloudCmd;\n    const prefixReg = RegExp('^' + prefix + FS);\n    \n    return decodeURI(path)\n        .replace(url, '')\n        .replace(prefixReg, '')\n    // browser doesn't replace % -> %25% do it for him\n        .replace('%%', '%25%')\n        .replace(NBSP_REG, SPACE) || '/';\n}\n\nasync function onPathElementClick(panel, event) {\n    event.preventDefault();\n    \n    const element = event.target;\n    const attr = element.getAttribute('data-name');\n    const noCurrent = isNoCurrent(panel);\n    \n    if (attr === 'js-copy-path')\n        return copyPath(element);\n    \n    if (attr === 'js-refresh')\n        return CloudCmd.refresh({\n            panel,\n            noCurrent,\n        });\n    \n    if (attr !== 'js-path-link')\n        return;\n    \n    const {href} = element;\n    const path = decodePath(href);\n    \n    await CloudCmd.loadDir({\n        path,\n        isRefresh: false,\n        panel: noCurrent ? panel : Info.panel,\n    });\n}\n\nfunction copyPath(el) {\n    clipboard.writeText(el.parentElement.title)\n        .then(CloudCmd.log)\n        .catch(CloudCmd.log);\n}\n\nfunction execIfNotUL(callback, event) {\n    const {target} = event;\n    const {tagName} = target;\n    \n    if (tagName !== 'UL')\n        callback(event);\n}\n\nfunction onClick(event) {\n    event.preventDefault();\n    changePanel(event.target);\n}\n\nfunction toggleSelect(key, files) {\n    const isMac = /Mac/.test(window.navigator.platform);\n    \n    if (!key)\n        throw Error('key should not be undefined!');\n    \n    const [file] = files;\n    \n    if (isMac && key.meta || key.ctrl)\n        return DOM.toggleSelectedFile(file);\n    \n    if (key.shift)\n        return files.map(DOM.selectFile);\n}\n\nfunction changePanel(element) {\n    const {panel} = Info;\n    const files = DOM.getByDataName('js-files', panel);\n    const ul = getULElement(element);\n    \n    if (ul !== files)\n        DOM.changePanel();\n}\n\nasync function onDblClick(event) {\n    const current = getLIElement(event.target);\n    const isDir = DOM.isCurrentIsDir(current);\n    const path = DOM.getCurrentPath(current);\n    \n    if (isDir) {\n        await CloudCmd.loadDir({\n            path: path === '/' ? '/' : path + '/',\n        });\n        \n        event.preventDefault();\n    } else {\n        CloudCmd.View.show();\n        \n        event.preventDefault();\n    }\n}\n\nasync function onTouch(event) {\n    const current = getLIElement(event.target);\n    const isDir = DOM.isCurrentIsDir(current);\n    \n    if (!isDir)\n        return;\n    \n    const isCurrent = DOM.isCurrentFile(current);\n    \n    if (!isCurrent)\n        return;\n    \n    await CloudCmd.loadDir({\n        path: DOM.getCurrentPath(current),\n    });\n}\n\n/*\n  * download file from browser to desktop\n  * in Chrome (HTML5)\n  */\nfunction onDragStart(event) {\n    const {prefixURL} = CloudCmd;\n    const element = getLIElement(event.target);\n    const {isDir} = Info;\n    let link = DOM.getCurrentLink(element);\n    let name = DOM.getCurrentName(element);\n    \n    /* if it's directory - adding json extension */\n    if (isDir) {\n        name += EXT;\n        link = document.createElement('a');\n        link.textContent = name;\n        link.href = prefixURL + '/pack' + Info.path + EXT;\n    }\n    \n    event.dataTransfer.setData(\n        'DownloadURL',\n        'application/octet-stream' + ':' +\n        name + ':' +\n        link,\n    );\n}\n\nfunction getLIElement(element) {\n    if (!element)\n        return element;\n    \n    while (element.tagName !== 'LI')\n        element = element.parentElement;\n    \n    return element;\n}\n\nfunction getULElement(element) {\n    while (element.tagName !== 'UL')\n        element = element.parentElement;\n    \n    return element;\n}\n\nfunction setCurrentFileByEvent(event) {\n    const BUTTON_LEFT = 0;\n    \n    const key = {\n        alt: event.altKey,\n        ctrl: event.ctrlKey,\n        meta: event.metaKey,\n        shift: event.shiftKey,\n    };\n    \n    const element = getLIElement(event.target);\n    \n    const fromName = Info.name;\n    DOM.setCurrentFile(element);\n    const toName = Info.name;\n    \n    let files = [];\n    \n    if (key.shift)\n        files = getFilesRange(fromName, toName);\n    else\n        files.push(Info.element);\n    \n    if (event.button === BUTTON_LEFT)\n        toggleSelect(key, files);\n}\n\nfunction getFilesRange(from, to) {\n    const files = DOM.getAllFiles();\n    const names = DOM.getFilenames(files);\n    const getNameIndex = getIndex(names);\n    \n    const indexFrom = getNameIndex(from);\n    const indexTo = getNameIndex(to);\n    \n    return getRange(indexFrom, indexTo, files);\n}\n\nfunction contextMenu() {\n    const fm = DOM.getFM();\n    \n    Events.addOnce('contextmenu', fm, (event) => {\n        CloudCmd.Menu.show({\n            x: event.clientX,\n            y: event.clientY,\n        });\n    });\n    \n    Events.addContextMenu(fm, (event) => {\n        CloudCmd.Menu.ENABLED || event.preventDefault();\n    });\n}\n\nfunction dragndrop() {\n    const panels = DOM.getByClassAll('panel');\n    const select = ({target}) => {\n        target.classList.add('selected-panel');\n    };\n    \n    const unselect = ({target}) => {\n        target.classList.remove('selected-panel');\n    };\n    \n    const onDrop = (event) => {\n        const {\n            files,\n            items,\n        } = event.dataTransfer;\n        \n        const {length: filesCount} = files;\n        \n        event.preventDefault();\n        \n        if (filesCount && (!items || !items.length || !items[0].webkitGetAsEntry))\n            return uploadFiles(files);\n        \n        const isFile = (item) => item.kind === 'file';\n        const dirFiles = Array.from(items).filter(isFile);\n        \n        if (dirFiles.length)\n            return DOM.uploadDirectory(dirFiles);\n        \n        const {Operation} = CloudCmd;\n        const operation = event.shiftKey ? 'move' : 'copy';\n        \n        return Operation.show(operation);\n    };\n    \n    /**\n     * In Mac OS Chrome dropEffect = 'none'\n     * so drop do not firing up when try\n     * to upload file from download bar\n     */\n    const onDragOver = (event) => {\n        const {dataTransfer} = event;\n        const {effectAllowed} = dataTransfer;\n        \n        if (/move|linkMove/.test(effectAllowed))\n            dataTransfer.dropEffect = 'move';\n        else\n            dataTransfer.dropEffect = 'copy';\n        \n        event.preventDefault();\n    };\n    \n    for (const panel of panels)\n        Events\n            .add('dragover', panel, onDragOver)\n            .add('drop', panel, onDrop)\n            .add('dragenter', select)\n            .add(['dragleave', 'drop'], unselect);\n}\n\nfunction unload() {\n    DOM.Events.add(['unload', 'beforeunload'], (event) => {\n        const {Key} = CloudCmd;\n        const isBind = Key && Key.isBind();\n        \n        if (isBind)\n            return;\n        \n        event.preventDefault();\n        return 'Please make sure that you saved all work.';\n    });\n}\n\nfunction pop() {\n    Events.add('popstate', async ({state}) => {\n        const path = (state || '').replace(FS, '');\n        \n        if (!path)\n            return CloudCmd.route(location.hash);\n        \n        const history = false;\n        await CloudCmd.loadDir({\n            path,\n            history,\n        });\n    });\n}\n\nfunction resize() {\n    Events.add('resize', () => {\n        const is = window.innerWidth < CloudCmd.MIN_ONE_PANEL_WIDTH;\n        \n        if (!is)\n            return;\n        \n        const {panel} = Info;\n        const isEmptyRoot = !panel;\n        \n        if (isEmptyRoot)\n            return;\n        \n        const name = panel.getAttribute('data-name');\n        const isLeft = name === 'js-left';\n        \n        if (isLeft)\n            return;\n        \n        DOM.changePanel();\n    });\n}\n\n","'use strict';\n\nmodule.exports = (indexFrom, indexTo, files) => {\n    if (indexFrom < indexTo)\n        return files.slice(indexFrom, indexTo + 1);\n    \n    if (indexFrom > indexTo)\n        return files.slice(indexTo, indexFrom + 1);\n    \n    return [files[indexFrom]];\n};\n\n","'use strict';\n\nmodule.exports = (array, item) => {\n    const index = array.indexOf(item);\n    \n    if (!~index)\n        return 0;\n    \n    return index;\n};\n\n","/* global CloudCmd, DOM */\n\n'use strict';\n\nconst Info = DOM.CurrentInfo;\n\nconst exec = require('execon');\nconst clipboard = require('@cloudcmd/clipboard');\n\nconst Events = require('../dom/events');\nconst Buffer = require('../dom/buffer');\nconst KEY = require('./key');\nconst vim = require('./vim');\nconst setCurrentByChar = require('./set-current-by-char');\nconst fullstore = require('fullstore');\nconst Chars = fullstore();\n\nChars([]);\n\nKeyProto.prototype = KEY;\nCloudCmd.Key = KeyProto;\nconst {loadDir} = CloudCmd;\n\nfunction KeyProto() {\n    let Binded;\n    \n    const Key = this;\n    \n    this.isBind = () => {\n        return Binded;\n    };\n    \n    this.setBind = () => {\n        Binded = true;\n    };\n    \n    this.unsetBind = () => {\n        Binded = false;\n    };\n    \n    this.bind = () => {\n        Events.addKey(listener, true);\n        Binded = true;\n    };\n    \n    function getChar(event) {\n        /*\n          * event.keyIdentifier deprecated in chrome v51\n          * but event.key is absent in chrome <= v51\n          */\n        \n        if (event.key)\n            return event.key;\n        \n        return fromCharCode(event.keyIdentifier);\n    }\n    \n    async function listener(event) {\n        const {keyCode} = event;\n        \n        // strange chrome bug calles listener twice\n        // in second time event misses a lot fields\n        if (typeof event.altKey === 'undefined')\n            return;\n        \n        const alt = event.altKey;\n        const ctrl = event.ctrlKey;\n        const shift = event.shiftKey;\n        const meta = event.metaKey;\n        const isBetween = keyCode >= KEY.ZERO && keyCode <= KEY.Z;\n        const isNumpad = /Numpad/.test(event.code);\n        \n        let char = getChar(event);\n        let isSymbol = ~['.', '_', '-', '+', '='].indexOf(char);\n        \n        if (!isSymbol) {\n            isSymbol = getSymbol(shift, keyCode);\n            \n            if (isSymbol)\n                char = isSymbol;\n        }\n        \n        if (!Key.isBind())\n            return;\n        \n        const isVim = CloudCmd.config('vim');\n        \n        if (!isVim && !isNumpad && !alt && !ctrl && !meta && (isBetween || isSymbol))\n            return setCurrentByChar(char, Chars);\n        \n        Chars([]);\n        await switchKey(event);\n        \n        if (keyCode >= KEY.F1 && keyCode <= KEY.F10)\n            return;\n        \n        if (isVim)\n            vim(char, event);\n    }\n    \n    function getSymbol(shift, keyCode) {\n        switch(keyCode) {\n        case KEY.DOT:\n            return '.';\n        \n        case KEY.HYPHEN:\n            return shift ? '_' : '-';\n        \n        case KEY.EQUAL:\n            return shift ? '+' : '=';\n        }\n    }\n    \n    function fromCharCode(keyIdentifier) {\n        const code = keyIdentifier.substring(2);\n        const hex = parseInt(code, 16);\n        const char = String.fromCharCode(hex);\n        \n        return char;\n    }\n    \n    async function switchKey(event) {\n        let i;\n        let isSelected;\n        let prev;\n        let next;\n        let current = Info.element;\n        let dataName;\n        \n        const {\n            name,\n            panel,\n            path,\n            isDir,\n        } = Info;\n        \n        const {Operation} = CloudCmd;\n        const {keyCode} = event;\n        \n        const alt = event.altKey;\n        const shift = event.shiftKey;\n        const ctrl = event.ctrlKey;\n        const meta = event.metaKey;\n        const ctrlMeta = ctrl || meta;\n        \n        if (current) {\n            prev = current.previousSibling;\n            next = current.nextSibling;\n        }\n        \n        switch(keyCode) {\n        case Key.TAB:\n            DOM.changePanel();\n            event.preventDefault();\n            break;\n        \n        case Key.INSERT:\n            DOM .toggleSelectedFile(current)\n                .setCurrentFile(next);\n            break;\n        \n        case Key.INSERT_MAC:\n            DOM .toggleSelectedFile(current)\n                .setCurrentFile(next);\n            break;\n        \n        case Key.DELETE:\n            if (shift)\n                Operation.show('delete:silent');\n            else\n                Operation.show('delete');\n            break;\n        \n        case Key.ASTERISK:\n            DOM.toggleAllSelectedFiles(current);\n            break;\n        \n        case Key.PLUS:\n            DOM.expandSelection();\n            event.preventDefault();\n            break;\n        \n        case Key.MINUS:\n            DOM.shrinkSelection();\n            event.preventDefault();\n            break;\n        \n        case Key.F1:\n            CloudCmd.Help.show();\n            event.preventDefault();\n            break;\n        \n        case Key.F2:\n            CloudCmd.UserMenu.show();\n            break;\n        \n        case Key.F3:\n            if (Info.isDir)\n                await loadDir({\n                    path,\n                });\n            else if (shift)\n                CloudCmd.Markdown.show(path);\n            else if (ctrlMeta)\n                CloudCmd.sortPanel('name');\n            else\n                CloudCmd.View.show();\n            \n            event.preventDefault();\n            break;\n        \n        case Key.F4:\n            if (shift)\n                CloudCmd.EditFileVim.show();\n            else\n                CloudCmd.EditFile.show();\n            \n            event.preventDefault();\n            break;\n        \n        case Key.F5:\n            if (ctrlMeta)\n                CloudCmd.sortPanel('date');\n            else if (alt)\n                Operation.show('pack');\n            else\n                Operation.show('copy');\n            \n            event.preventDefault();\n            break;\n        \n        case Key.F6:\n            if (ctrlMeta)\n                CloudCmd.sortPanel('size');\n            else if (shift)\n                DOM.renameCurrent(current);\n            else\n                Operation.show('move');\n            \n            event.preventDefault();\n            break;\n        \n        case Key.F7:\n            if (shift)\n                DOM.promptNewFile();\n            else\n                DOM.promptNewDir();\n            \n            event.preventDefault();\n            break;\n        \n        case Key.F8:\n            Operation.show('delete');\n            event.preventDefault();\n            break;\n        \n        case Key.F9:\n            if (alt)\n                Operation.show('extract');\n            else\n                CloudCmd.Menu.show();\n            event.preventDefault();\n            break;\n        \n        case Key.F10:\n            CloudCmd.Config.show();\n            event.preventDefault();\n            break;\n        \n        case Key.TRA:\n            event.preventDefault();\n            \n            if (shift)\n                return CloudCmd.Terminal.show();\n            \n            CloudCmd.Konsole.show();\n            break;\n        \n        case KEY.BRACKET_CLOSE:\n            CloudCmd.Konsole.show();\n            event.preventDefault();\n            break;\n        \n        case Key.SPACE:\n            if (!isDir || name === '..')\n                isSelected = true;\n            else\n                isSelected = DOM.isSelected(current);\n            \n            exec.if(isSelected, () => {\n                DOM.toggleSelectedFile(current);\n            }, (callback) => {\n                DOM.loadCurrentSize(current, callback);\n            });\n            \n            event.preventDefault();\n            break;\n        \n        case Key.U:\n            if (ctrlMeta) {\n                DOM.swapPanels();\n                event.preventDefault();\n            }\n            break;\n        \n        /* navigation on file table:        *\n         * in case of pressing button 'up', *\n         * select previous row              */\n        case Key.UP:\n            if (shift)\n                DOM.toggleSelectedFile(current);\n            \n            DOM.setCurrentFile(prev);\n            event.preventDefault();\n            break;\n        \n        /* in case of pressing button 'down', *\n         * select next row                    */\n        case Key.DOWN:\n            if (shift)\n                DOM.toggleSelectedFile(current);\n            \n            DOM.setCurrentFile(next);\n            event.preventDefault();\n            break;\n        \n        case Key.LEFT:\n            if (!alt)\n                return;\n            \n            event.preventDefault();\n            \n            dataName = Info.panel.getAttribute('data-name');\n            \n            if (dataName === 'js-right')\n                DOM.duplicatePanel();\n            \n            break;\n        \n        case Key.RIGHT:\n            if (!alt)\n                return;\n            \n            event.preventDefault();\n            \n            dataName = Info.panel.getAttribute('data-name');\n            \n            if (dataName === 'js-left')\n                DOM.duplicatePanel();\n            \n            break;\n        \n        /* in case of pressing button 'Home',  *\n         * go to top element                   */\n        case Key.HOME:\n            DOM.setCurrentFile(Info.first);\n            event.preventDefault();\n            break;\n        \n        /* in case of pressing button 'End', select last element */\n        case Key.END:\n            DOM.setCurrentFile(Info.last);\n            event.preventDefault();\n            break;\n        \n        /* если нажали клавишу page down проматываем экран */\n        case Key.PAGE_DOWN:\n            DOM.scrollByPages(panel, 1);\n            \n            for (i = 0; i < 30; i++) {\n                if (!current.nextSibling)\n                    break;\n                \n                current = current.nextSibling;\n            }\n            \n            DOM.setCurrentFile(current);\n            event.preventDefault();\n            break;\n        \n        /* если нажали клавишу page up проматываем экран */\n        case Key.PAGE_UP:\n            DOM.scrollByPages(panel, -1);\n            \n            for (i = 0; i < 30; i++) {\n                if (!current.previousSibling)\n                    break;\n                \n                current = current.previousSibling;\n            }\n            \n            DOM.setCurrentFile(current);\n            event.preventDefault();\n            break;\n        \n        case Key.ENTER:\n            if (Info.isDir)\n                await loadDir({path});\n            else\n                CloudCmd.View.show();\n            break;\n        \n        case Key.BACKSPACE:\n            CloudCmd.goToParentDir();\n            event.preventDefault();\n            break;\n        \n        case Key.BACKSLASH:\n            if (ctrlMeta)\n                await loadDir({\n                    path: '/',\n                });\n            break;\n        \n        case Key.A:\n            if (ctrlMeta) {\n                DOM.selectAllFiles();\n                event.preventDefault();\n            }\n            \n            break;\n        \n        case Key.G:\n            if (alt) {\n                DOM.goToDirectory();\n                event.preventDefault();\n            }\n            \n            break;\n        \n        case Key.M:\n            if (ctrlMeta) {\n                if (shift)\n                    CloudCmd.EditNamesVim.show();\n                else\n                    CloudCmd.EditNames.show();\n                \n                event.preventDefault();\n            }\n            \n            break;\n        \n        case Key.P:\n            if (!ctrlMeta)\n                return;\n            \n            event.preventDefault();\n            clipboard\n                .writeText(Info.dirPath)\n                .catch(CloudCmd.log);\n            \n            break;\n        /**\n         * обновляем страницу,\n         * загружаем содержимое каталога\n         * при этом данные берём всегда с\n         * сервера, а не из кэша\n         * (обновляем кэш)\n         */\n        case Key.R:\n            if (ctrlMeta) {\n                CloudCmd.log('reloading page...\\n');\n                CloudCmd.refresh();\n                event.preventDefault();\n            }\n            break;\n        \n        case Key.C:\n            if (ctrlMeta)\n                Buffer.copy();\n            break;\n        \n        case Key.X:\n            if (ctrlMeta)\n                Buffer.cut();\n            break;\n        \n        case Key.V:\n            if (ctrlMeta)\n                Buffer.paste();\n            break;\n        \n        case Key.Z:\n            if (ctrlMeta)\n                Buffer.clear();\n            break;\n        \n        /* чистим хранилище */\n        case Key.D:\n            if (ctrlMeta) {\n                CloudCmd.log('clearing storage...');\n                await DOM.Storage.clear();\n                CloudCmd.log('storage cleared');\n                event.preventDefault();\n            }\n            break;\n        }\n    }\n}\n\n","'use strict';\n\n/* global CloudCmd */\n/* global DOM */\n\nconst vim = require('./vim');\nconst finder = require('./find');\n\nconst Info = DOM.CurrentInfo;\nconst {Dialog} = DOM;\n\nmodule.exports = async (key, event) => {\n    const operations = getOperations(event);\n    await vim(key, operations);\n};\n\nconst getOperations = (event) => {\n    return {\n        escape: DOM.unselectFiles,\n        remove: () => {\n            CloudCmd.Operation.show('delete');\n        },\n        copy: () => {\n            DOM.Buffer.copy();\n            DOM.unselectFiles();\n        },\n        select: () => {\n            const current = Info.element;\n            DOM.toggleSelectedFile(current);\n        },\n        paste: DOM.Buffer.paste,\n        moveNext: ({count, isVisual, isDelete}) => {\n            setCurrent('next', {\n                count,\n                isVisual,\n                isDelete,\n            });\n        },\n        movePrevious: ({count, isVisual, isDelete}) => {\n            setCurrent('previous', {\n                count,\n                isVisual,\n                isDelete,\n            });\n        },\n        find: async () => {\n            event.preventDefault();\n            const [, value] = await Dialog.prompt('Find', '');\n            \n            if (!value)\n                return;\n            \n            const names = Info.files.map(DOM.getCurrentName);\n            const [result] = finder.find(value, names);\n            \n            DOM.setCurrentByName(result);\n        },\n        findNext: () => {\n            const name = finder.findNext();\n            DOM.setCurrentByName(name);\n        },\n        findPrevious: () => {\n            const name = finder.findPrevious();\n            DOM.setCurrentByName(name);\n        },\n    };\n};\n\nmodule.exports.selectFile = selectFile;\n\nfunction selectFile(current) {\n    const name = DOM.getCurrentName(current);\n    \n    if (name === '..')\n        return;\n    \n    DOM.selectFile(current);\n}\n\nfunction setCurrent(sibling, {count, isVisual, isDelete}) {\n    let current = Info.element;\n    const select = isVisual ? selectFile : DOM.unselectFile;\n    \n    select(current);\n    \n    const position = `${sibling}Sibling`;\n    for (let i = 0; i < count; i++) {\n        const next = current[position];\n        \n        if (!next)\n            break;\n        \n        current = next;\n        select(current);\n    }\n    \n    DOM.setCurrentFile(current);\n    \n    if (isDelete)\n        CloudCmd.Operation.show('delete');\n}\n\n","'use strict';\n\nconst fullstore = require('fullstore');\nconst store = fullstore('');\nconst visual = fullstore(false);\n\nconst stopVisual = () => {\n    visual(false);\n};\n\nconst end = () => {\n    store('');\n};\n\nconst rmFirst = (a) => {\n    return a\n        .split('')\n        .slice(1)\n        .join('');\n};\n\nconst noop = () => {};\n\nmodule.exports = (key, operations) => {\n    const prevStore = store();\n    const isVisual = visual();\n    const value = store(prevStore.concat(key));\n    const {\n        escape = noop,\n        moveNext = noop,\n        movePrevious = noop,\n        remove = noop,\n        copy = noop,\n        paste = noop,\n        select = noop,\n        find = noop,\n        findNext = noop,\n        findPrevious = noop,\n    } = operations;\n    \n    if (key === 'Enter')\n        return end();\n    \n    if (key === 'Escape') {\n        visual(false);\n        escape();\n        return end();\n    }\n    \n    if (key === 'j') {\n        const {\n            count,\n            isDelete,\n            isVisual,\n        } = handleDelete(prevStore);\n        \n        !isNaN(count) && moveNext({\n            count,\n            isVisual,\n            isDelete,\n        });\n        \n        return end();\n    }\n    \n    if (key === 'k') {\n        const {\n            count,\n            isDelete,\n            isVisual,\n        } = handleDelete(prevStore);\n        \n        !isNaN(count) && movePrevious({\n            count,\n            isVisual,\n            isDelete,\n        });\n        \n        return end();\n    }\n    \n    if (/^gg$/.test(value)) {\n        const {\n            isDelete,\n            isVisual,\n        } = handleDelete(prevStore);\n        \n        movePrevious({\n            count: Infinity,\n            isVisual,\n            isDelete,\n        });\n        \n        return end();\n    }\n    \n    if (key === 'd' && (visual() || prevStore === 'd')) {\n        stopVisual();\n        remove();\n        return end();\n    }\n    \n    if (key === 'G') {\n        moveNext({\n            count: Infinity,\n            isVisual,\n        });\n        \n        return end();\n    }\n    \n    if (key === 'y') {\n        if (!visual())\n            return end();\n        \n        stopVisual();\n        copy();\n        return end();\n    }\n    \n    if (/^p$/i.test(key)) {\n        paste();\n        return end();\n    }\n    \n    if (/^v$/i.test(key)) {\n        visual(!visual());\n        select();\n        return end();\n    }\n    \n    if (key === '/') {\n        find();\n        return end();\n    }\n    \n    if (key === 'n') {\n        findNext();\n        return end();\n    }\n    \n    if (key === 'N') {\n        findPrevious();\n        return end();\n    }\n};\n\nfunction handleDelete(prevStore) {\n    const isDelete = prevStore[0] === 'd';\n    \n    if (isDelete) {\n        visual(true);\n        prevStore = rmFirst(prevStore);\n    }\n    \n    const count = getNumber(prevStore);\n    const isVisual = visual();\n    \n    return {\n        count,\n        isDelete,\n        isVisual,\n    };\n}\n\nfunction getNumber(value) {\n    if (!value)\n        return 1;\n    \n    if (value === 'g')\n        return 1;\n    \n    return parseInt(value);\n}\n\n","'use strict';\n\nconst fullstore = require('fullstore');\nconst limier = require('limier');\n\nconst searchStore = fullstore([]);\nconst searchIndex = fullstore(0);\n\nmodule.exports.find = (value, names) => {\n    const result = limier(value, names);\n    \n    searchStore(result);\n    searchIndex(0);\n    \n    return result;\n};\n\nmodule.exports.findNext = () => {\n    const names = searchStore();\n    const index = next(searchIndex(), names.length);\n    \n    searchIndex(index);\n    return names[searchIndex()];\n};\n\nmodule.exports.findPrevious = () => {\n    const names = searchStore();\n    const index = previous(searchIndex(), names.length);\n    \n    searchIndex(index);\n    return names[index];\n};\n\nmodule.exports._next = next;\nmodule.exports._previous = previous;\n\nfunction next(index, length) {\n    if (index === length - 1)\n        return 0;\n    \n    return ++index;\n}\n\nfunction previous(index, length) {\n    if (!index)\n        return length - 1;\n    \n    return --index;\n}\n\n","/* global DOM */\n\n'use strict';\n\nconst Info = DOM.CurrentInfo;\nconst {escapeRegExp} = require('../../common/util');\n\nmodule.exports = function setCurrentByChar(char, charStore) {\n    let firstByName;\n    let skipCount = 0;\n    let setted = false;\n    let i = 0;\n    \n    const escapeChar = escapeRegExp(char);\n    const regExp = new RegExp('^' + escapeChar + '.*$', 'i');\n    const {files} = Info;\n    const chars = charStore();\n    const n = chars.length;\n    \n    while (i < n && char === chars[i])\n        i++;\n    \n    if (!i)\n        charStore([]);\n    \n    const skipN = skipCount = i;\n    \n    charStore(charStore().concat(char));\n    \n    const names = DOM.getFilenames(files);\n    const isTest = (a) => regExp.test(a);\n    const isRoot = (a) => a === '..';\n    const not = (f) => (a) => !f(a);\n    const setCurrent = (name) => {\n        const byName = DOM.getCurrentByName(name);\n        \n        if (!skipCount) {\n            setted = true;\n            DOM.setCurrentFile(byName);\n            return true;\n        }\n        \n        if (skipN === skipCount)\n            firstByName = byName;\n        \n        --skipCount;\n    };\n    \n    names\n        .filter(isTest)\n        .filter(not(isRoot))\n        .some(setCurrent);\n    \n    if (!setted) {\n        DOM.setCurrentFile(firstByName);\n        charStore([char]);\n    }\n};\n\n","'use strict';\n\n/* global CloudCmd */\nconst DOM = require('./dom');\n\nconst Info = DOM.CurrentInfo;\n\nconst {\n    sort,\n    order,\n} = CloudCmd;\n\nconst position = DOM.getPanelPosition();\n\nlet sortPrevious = sort[position];\n\nconst {getPanel} = DOM;\n\nCloudCmd.sortPanel = (name, panel = getPanel()) => {\n    const position = panel\n        .dataset\n        .name\n        .replace('js-', '');\n    \n    if (name !== sortPrevious) {\n        order[position] = 'asc';\n    } else {\n        if (order[position] === 'asc')\n            order[position] = 'desc';\n        else\n            order[position] = 'asc';\n    }\n    \n    sortPrevious =\n    sort[position] = name;\n    \n    const noCurrent = position !== Info.panelPosition;\n    \n    CloudCmd.refresh({\n        panel,\n        noCurrent,\n    });\n};\n\n"],"sourceRoot":""}